import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression

st.set_page_config(page_title="Tend√™ncias de Consumo de Internet", layout="centered")

# Carrega dados
df = pd.read_csv("data/internet_usage.csv", parse_dates=["data"])
df['mm_7d'] = df['consumo_mb'].rolling(7).mean()
df['dias'] = (df['data'] - df['data'].min()).dt.days

# Modelo linear
model = LinearRegression().fit(df[['dias']], df['consumo_mb'])
df['tendencia_linear'] = model.predict(df[['dias']])

st.title("üìä Dashboard de Tend√™ncias de Uso de Internet")

st.write("""
## Evolu√ß√£o do Consumo Di√°rio de Internet

Este gr√°fico apresenta o consumo di√°rio de internet (linha azul clara) ao longo do ano, destacando as principais tend√™ncias e padr√µes de uso.

- **Consumo Di√°rio:** Linha azul clara, mostra o valor registrado de consumo em cada dia, evidenciando as varia√ß√µes naturais e poss√≠veis picos de uso.
- **M√©dia M√≥vel (7 dias):** Linha vermelha, suaviza as oscila√ß√µes di√°rias e ajuda a identificar padr√µes semanais e per√≠odos de maior estabilidade ou crescimento.
- **Tend√™ncia Linear:** Linha verde, indica a dire√ß√£o geral do consumo ao longo do tempo, baseada em uma regress√£o simples.

Juntos, esses elementos permitem identificar comportamentos sazonais, eventos fora do padr√£o e o crescimento cont√≠nuo do consumo de internet ao longo do ano.
""")

st.subheader("Consumo Di√°rio, M√©dia M√≥vel e Tend√™ncia Linear")
fig, ax = plt.subplots(figsize=(10,5))
ax.plot(df['data'], df['consumo_mb'], alpha=0.4, label='Consumo Di√°rio', color='skyblue')
ax.plot(df['data'], df['mm_7d'], color='red', label='M√©dia M√≥vel (7 dias)')
ax.plot(df['data'], df['tendencia_linear'], color='green', label='Tend√™ncia Linear')
ax.set_xlabel("Data")
ax.set_ylabel("Consumo (MB)")
ax.legend()
st.pyplot(fig)

st.write("""
---
## Estat√≠sticas Gerais do Consumo

Esta tabela resume as principais estat√≠sticas descritivas do consumo di√°rio de internet no per√≠odo analisado:

- **M√©dia (mean):** Valor m√©dio de consumo ao longo do ano, indicando o uso t√≠pico di√°rio.
- **M√≠nimo e M√°ximo (min/max):** Mostram os menores e maiores valores registrados, √∫teis para identificar extremos.
- **Desvio Padr√£o (std):** Mede o quanto os valores de consumo variam em rela√ß√£o √† m√©dia; quanto maior, maior a variabilidade do consumo di√°rio.
- **Quartis (25%, 50%, 75%):** Apresentam a distribui√ß√£o dos dados, indicando como o consumo se concentra ao longo do per√≠odo.

Estas estat√≠sticas ajudam a entender o perfil de consumo, identificar poss√≠veis anomalias e fornecer uma vis√£o geral dos dados, servindo como base para an√°lises e decis√µes futuras.
""")

st.subheader("Estat√≠sticas Gerais")
st.write(df[['consumo_mb', 'mm_7d', 'dias', 'tendencia_linear']].describe())

st.write("""
---
## Proje√ß√£o Linear de Consumo para os Pr√≥ximos 30 Dias

Este gr√°fico mostra uma proje√ß√£o do consumo de internet para os pr√≥ximos 30 dias, baseada na tend√™ncia linear identificada nos dados hist√≥ricos.

- **Hist√≥rico:** Linha azul clara, mostra o hist√≥rico de consumo at√© o presente.
- **Proje√ß√£o Linear:** Linha laranja, apresenta a estimativa de consumo futuro, assumindo que a tend√™ncia observada ser√° mantida.

Esta previs√£o √© √∫til para planejamento de capacidade, identifica√ß√£o de poss√≠veis gargalos e para apoiar decis√µes estrat√©gicas sobre a infraestrutura de internet, garantindo que a empresa esteja preparada para atender ao crescimento da demanda.
""")

st.subheader("Proje√ß√£o Linear para os pr√≥ximos 30 dias")
future_days = pd.DataFrame({
    "dias": range(df['dias'].max()+1, df['dias'].max()+31),
})
future_days['consumo_proj'] = model.predict(future_days[['dias']])
future_days['data'] = df['data'].max() + pd.to_timedelta(future_days['dias'] - df['dias'].max(), unit="D")

fig2, ax2 = plt.subplots(figsize=(10,3))
ax2.plot(df['data'], df['consumo_mb'], alpha=0.3, label="Hist√≥rico", color='skyblue')
ax2.plot(future_days['data'], future_days['consumo_proj'], color='orange', label="Proje√ß√£o Linear")
ax2.set_xlabel("Data")
ax2.set_ylabel("Consumo (MB)")
ax2.legend()
st.pyplot(fig2)
